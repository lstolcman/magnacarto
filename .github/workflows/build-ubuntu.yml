name: Build

on: [push, pull_request]

jobs:

  build:
    runs-on: ubuntu-22.04
    steps:




    - name: build mapnik cmake
      shell: bash
      run: |
        DEBIAN_FRONTEND=noninteractive
        BUILD_DEPENDENCIES="libicu-dev \
          libfreetype6-dev \
          libharfbuzz-dev \
          libxml2-dev \
          libjpeg-dev \
          libtiff-dev \
          libwebp-dev \
          libcairo2-dev \
          libproj-dev \
          libgdal-dev \
          libboost-filesystem-dev \
          libboost-program-options-dev \
          libboost-regex-dev \
          "

        sudo apt-get install -y --no-install-recommends \
              cmake \
              ninja-build \
              build-essential \
              $BUILD_DEPENDENCIES

        git clone https://github.com/mapnik/mapnik.git
        cd mapnik
        git checkout $MAPNIK_VERSION
        git submodule update --init

        sudo cmake --preset linux-gcc-release -DBUILD_DEMO_VIEWER=OFF -DBUILD_TESTING=OFF -DBUILD_DEMO_CPP=OFF -DBUILD_BENCHMARK=OFF \
        && cmake --build --preset linux-gcc-release \
        && cmake --build --preset linux-gcc-release --target install \
        # && cd / \
        # && echo "/usr/local/lib" > /etc/ld.so.conf.d/mapnik.conf \
        # && ldconfig \
        # && rm -rf /app










    # - name: build mapnik
    #   shell: bash
    #   run: |
    #     export BUILD_DEPENDENCIES="build-essential \
    #       ca-certificates \
    #       git \
    #       icu-devtools \
    #       libboost-dev \
    #       libboost-filesystem-dev \
    #       libboost-program-options-dev \
    #       libboost-regex-dev \
    #       libboost-thread-dev \
    #       libboost-system-dev \
    #       libcairo-dev \
    #       libfreetype6-dev \
    #       libgdal-dev \
    #       libharfbuzz-dev \
    #       libicu-dev \
    #       libjpeg-dev \
    #       libpq-dev  \
    #       libproj-dev \
    #       librasterlite2-dev \
    #       libsqlite3-dev \
    #       libtiff-dev \
    #       libwebp-dev"

    #     export DEPENDENCIES="libboost-filesystem1.74.0 \
    #         libboost-program-options1.74.0 \
    #         libboost-regex1.74.0 \
    #         libboost-thread1.74.0 \
    #         libboost-system1.74.0 \
    #         libcairo2 \
    #         libfreetype6 \
    #         libgdal30 \
    #         libharfbuzz-gobject0 \
    #         libharfbuzz-icu0 \
    #         libharfbuzz0b \
    #         libicu70 \
    #         libjpeg-turbo8 \
    #         libjpeg62 \
    #         libpq5 \
    #         libproj22 \
    #         librasterlite2-1 \
    #         libsqlite3-0 \
    #         libtiff5 \
    #         libtiffxx5 \
    #         libwebp7  \
    #         libwebpdemux2 \
    #         libwebpmux3"
    #     # python3


    #     sudo apt-get update
    #     sudo apt-get install -y --no-install-recommends $BUILD_DEPENDENCIES $DEPENDENCIES
    #     git clone https://github.com/mapnik/mapnik.git
    #     cd mapnik
    #     git checkout $MAPNIK_VERSION
    #     git submodule update --init
    #     python scons/scons.py INPUT_PLUGINS='all'
        
    #     JOBS=2 make
    #     JOBS=2 make install

    #     cd ..



    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: |
        # bash ./crosscompile.sh
        go get -u github.com/omniscale/magnacarto
        make install

    - uses: actions/upload-artifact@v3
      with:
        name: magnacarto
        path: dist/